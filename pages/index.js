import BlogContent from '@/components/BlogContent';
import LandingPage from '@/components/LandingPage';
import Layout from '@/components/Layout';
import Head from 'next/head';
import { client } from '@/lib/client';
import { dehydrate, QueryClient, useQuery } from '@tanstack/react-query';
import ClipLoader from 'react-spinners/ClipLoader';
import { useEffect, useState } from 'react';

// get blogs from sanity
async function getBlogs() {
  const query = `*[_type == "post"]{author,title,slug,_id,_createdAt,mainImage,excerpt} `;
  const response = await client.fetch(query);
  return response;
}

const override = {
  display: 'block',
  margin: '0 auto',
  borderColor: 'red',
};

export default function Home() {
  const [data, setData] = useState([]);
  const { data: Blogs, isLoading } = useQuery({
    queryKey: ['blogs'],
    queryFn: () => getBlogs(),
  });

  useEffect(() => {
    setData(Blogs);
  }, [Blogs]);

  if (isLoading) {
    return (
      <>
        <ClipLoader
          BeatLoader={true}
          color={color}
          loading={isLoading}
          cssOverride={override}
          size={150}
          aria-label="Loading Spinner"
          data-testid="loader"
        />
      </>
    );
  }
  return (
    <Layout>
      <Head>
        <title>Home | Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <LandingPage />
        <BlogContent data={data} />
      </div>
    </Layout>
  );
}

export async function getStaticProps() {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(['blogs'], () => getBlogs());

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}
